<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>kubernetes on 丸子有记</title><link>/categories/kubernetes/</link><description>Recent content in kubernetes on 丸子有记</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>wzdushu@gmail.com (wanzi)</managingEditor><webMaster>wzdushu@gmail.com (wanzi)</webMaster><copyright>丸子有记</copyright><lastBuildDate>Mon, 19 Aug 2024 10:10:42 +0800</lastBuildDate><atom:link href="/categories/kubernetes/index.xml" rel="self" type="application/rss+xml"/><item><title>Summary of CKA Examination Experience in 2024</title><link>/post/kubernetes-cka-2024/</link><pubDate>Mon, 19 Aug 2024 10:10:42 +0800</pubDate><author>wzdushu@gmail.com (wanzi)</author><guid>/post/kubernetes-cka-2024/</guid><description>I have wanted to take a cloud native &amp;amp; k8s related certificate for a long time. The sooner the better. I have been postponing it until this year due to work reasons. I have seen its price increase twice (it hurts a little bit to say this). Recently, I finally had time to spare a week to prepare for the exam. Since I have been using kubernetes in my work</description></item><item><title>Using Alibaba Cloud's open source solution to enable multiple people to use a single GPU</title><link>/post/kubernetes-aliyun-gpushare-deploy/</link><pubDate>Fri, 30 Jun 2023 18:10:42 +0800</pubDate><author>wzdushu@gmail.com (wanzi)</author><guid>/post/kubernetes-aliyun-gpushare-deploy/</guid><description>Recently, a new AI project was launched, which mainly provides AI online experiments for universities. The project also purchased a GPU server, but there is only one Nvidia Tesla T4 card, which needs to support multiple students to do experiments online at the same time. The online experiment system is currently running on Kubernetes, so it is necessary to consider GPU sharing in the k8s environment. Alibaba Cloud GPU card</description></item><item><title>Kind builds a lightweight kubernetes cluster</title><link>/post/kubernetes-kind-build-clusters/</link><pubDate>Thu, 13 Apr 2023 18:22:42 +0800</pubDate><author>wzdushu@gmail.com (wanzi)</author><guid>/post/kubernetes-kind-build-clusters/</guid><description>I was reviewing Golang recently and wrote a web application. After running it locally, I wanted to test it in a k8s cluster. Due to the machine configuration, it was still a bit difficult to build a complete k8s cluster. I remember that a friend said that k8s can also be run in docker, so I tried it. Today&amp;rsquo;s protagonist is kind, so what is kind? What can kind be</description></item><item><title>Solve nginx file upload restrictions and 504 gateway timeout under k8s</title><link>/post/kubernetes-nginx-ingress-504/</link><pubDate>Mon, 08 Nov 2021 17:22:42 +0800</pubDate><author>wzdushu@gmail.com (wanzi)</author><guid>/post/kubernetes-nginx-ingress-504/</guid><description>Recently, there are two problems that need to be solved when using k8s clusters for business. Here are some records: 1M limit for uploading files on the front-end page 504 timeout occurs when the front-end page sends a POST request to the back-end The main solution to the first problem: the default upload size of nginx is 1M, and the following content is added to the http, server, location area</description></item><item><title>阿里云ACK同时支持公网和内网SLB</title><link>/post/kubernetes-aliyun-ingress-slb-intranet/</link><pubDate>Thu, 21 Oct 2021 17:22:42 +0800</pubDate><author>wzdushu@gmail.com (wanzi)</author><guid>/post/kubernetes-aliyun-ingress-slb-intranet/</guid><description>一、背景 有一套ACK集群 成功部署Nginx ingress controller并绑定了公网SLB 注意：通过阿里云容器服务管理控制台创建的Kubernete</description></item><item><title>利用Prometheusalert打造Prometheus告警消息聚合</title><link>/post/prometheus-prometheusalert-alertmanager/</link><pubDate>Sat, 18 Sep 2021 17:22:42 +0800</pubDate><author>wzdushu@gmail.com (wanzi)</author><guid>/post/prometheus-prometheusalert-alertmanager/</guid><description>部署prometheusalert Copy 1 2 3 4 git clone https://github.com/feiyu563/PrometheusAlert.git cd PrometheusAlert/example/helm/prometheusalert #更新config/app.conf设置登陆用户信息，并配置数据库信息 helm install -n monitoring . 创建企</description></item><item><title>制定kubernetes集群备份策略</title><link>/post/kubernetes-velero-etcd-backup/</link><pubDate>Sat, 11 Sep 2021 17:22:42 +0800</pubDate><author>wzdushu@gmail.com (wanzi)</author><guid>/post/kubernetes-velero-etcd-backup/</guid><description>对于备份，每家互联网公司技术人员都要去做的一件事儿，当然我们也不例外，今天我主要针对生产环境kubernetes集群制定一些自己的策略，这里</description></item><item><title>阿里云共享GPU方案测试</title><link>/post/kubernetes-gpushare-aliyun/</link><pubDate>Tue, 31 Aug 2021 14:22:42 +0800</pubDate><author>wzdushu@gmail.com (wanzi)</author><guid>/post/kubernetes-gpushare-aliyun/</guid><description>一、k8s部署GPU共享插件 部署之前需要确保k8s节点上已安装nvidia-driver和nvidia-docker，同时已将docker默</description></item><item><title>kubeadm部署高可用kubernetes集群</title><link>/post/kubernetes-kubeadm-haproxy-keepalived-deploy/</link><pubDate>Sun, 15 Aug 2021 17:22:42 +0800</pubDate><author>wzdushu@gmail.com (wanzi)</author><guid>/post/kubernetes-kubeadm-haproxy-keepalived-deploy/</guid><description>为了后便后期验证私有化部署 ，最近内网环境需要快速搭建一套k8s集群，由于之前对于规模比较大的集群，我一般采用kubeasz和kubespra</description></item><item><title>kubernetes集群添加用户</title><link>/post/kubernetes-add-user/</link><pubDate>Tue, 31 Dec 2019 10:22:42 +0800</pubDate><author>wzdushu@gmail.com (wanzi)</author><guid>/post/kubernetes-add-user/</guid><description>之前通过ansible搭建了kubernetes集群环境,这里需求主要是添加一个用户进行日常管理，并限制到指定的namespace，接下来进</description></item><item><title>kubernetes集群部署traefik2.1</title><link>/post/kubernetes-traefik-v2/</link><pubDate>Tue, 17 Dec 2019 10:22:42 +0800</pubDate><author>wzdushu@gmail.com (wanzi)</author><guid>/post/kubernetes-traefik-v2/</guid><description>架构&amp;amp;概念 Traefik2.x版本相比1.7.x架构有很大变化，正如上边这张架构图，最主要的功能是支持了TCP协议、增加了Route</description></item><item><title>kubeasz部署k8s集群</title><link>/post/kubernetes-kubeasz-deploy-automation/</link><pubDate>Thu, 12 Dec 2019 10:22:42 +0800</pubDate><author>wzdushu@gmail.com (wanzi)</author><guid>/post/kubernetes-kubeasz-deploy-automation/</guid><description>环境准备 Master节点 Copy 1 2 3 172.16.244.14 172.16.244.16 172.16.244.18 Node节点 Copy 1 2 172.16.244.25 172.16.244.27 Master节点VIP地址: 172.16.243.13 部署工具:Ansible/kubeasz 初始化环境</description></item></channel></rss>