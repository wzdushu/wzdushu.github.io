<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>tools on 丸子有记</title><link>/categories/tools/</link><description>Recent content in tools on 丸子有记</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>wzdushu@gmail.com (wanzi)</managingEditor><webMaster>wzdushu@gmail.com (wanzi)</webMaster><copyright>丸子有记</copyright><lastBuildDate>Sun, 16 Jun 2024 16:22:42 +0800</lastBuildDate><atom:link href="/categories/tools/index.xml" rel="self" type="application/rss+xml"/><item><title>Open source Waf security protection solution</title><link>/post/tools-safeline-waf/</link><pubDate>Sun, 16 Jun 2024 16:22:42 +0800</pubDate><author>wzdushu@gmail.com (wanzi)</author><guid>/post/tools-safeline-waf/</guid><description>After adding CDN to the website recently, there are always a lot of junk requests inexplicably in the early morning, some of which are scans, some are large model UserAgents, and some are black spiders. In order to save CDN costs and prevent various injection attacks, I started to investigate open source Waf solutions (my own small broken site is enough). If it is used by an enterprise, it is</description></item><item><title>A powerful tool for operating Baidu Cloud Disk under Linux</title><link>/post/tools-bypy-baiduyunpan/</link><pubDate>Mon, 04 Dec 2023 16:22:42 +0800</pubDate><author>wzdushu@gmail.com (wanzi)</author><guid>/post/tools-bypy-baiduyunpan/</guid><description>Recently, I have been deploying private SAAS products on the customer side. Since the customer&amp;rsquo;s on-site network cannot access the Internet, the data can only be transferred through the Linux jump server. In addition to the k8s offline deployment program and image, there are also hundreds of GB of video data that have been cut, so it can only be transferred through Baidu Cloud Disk. Imagine whether it is possible</description></item><item><title>An open source Windows package management tool</title><link>/post/tools-scoop-windows-brew/</link><pubDate>Mon, 10 Jul 2023 16:22:42 +0800</pubDate><author>wzdushu@gmail.com (wanzi)</author><guid>/post/tools-scoop-windows-brew/</guid><description>Since I have been using Mac for work and am used to the convenience of installing software packages with brew on Mac, I recently installed Windows on my company computer. I want to try it out. How can I install software packages as smoothly as on MAC? Of course, the protagonist I recommend today is Scoop. Scoop is an open source project that mainly installs Windows software packages through commands.</description></item><item><title>Delve version is too low to be compatible with Goland</title><link>/post/tools-goland-delve-err/</link><pubDate>Wed, 15 Mar 2023 16:22:42 +0800</pubDate><author>wzdushu@gmail.com (wanzi)</author><guid>/post/tools-goland-delve-err/</guid><description>Problem When debugging code in Goland recently, the following error is always reported: Copy 1 WARNING: undefined behavior - version of Delve is too old for Go version 1.19.3 (maximum supported version 1.18) Solution The problem probably means that the Delve version is too low and cannot meet the current Golang version Update delve. Since I use brew to install it here, the default official website installation document does not</description></item><item><title>Automatically renew a free SSL certificate for your blog</title><link>/post/tools-ssl-renew-acme/</link><pubDate>Sat, 12 Nov 2022 16:22:42 +0800</pubDate><author>wzdushu@gmail.com (wanzi)</author><guid>/post/tools-ssl-renew-acme/</guid><description>Background If you have a website or an independent blog, you need to care about the expiration of your website&amp;rsquo;s SSL certificate every year. Recently, the wnote.com certificate is about to expire; Applying for an SSL certificate allows the website to support https access. There are free and paid ones on the market; For free certificates, domestic mainstream cloud vendors such as Alibaba, Tencent, ucloud and other platforms have free</description></item><item><title>Recommend a Markdown book writing tool, which is said to be a GitBook alternative</title><link>/post/tools-mdbook-write-books/</link><pubDate>Thu, 06 Oct 2022 21:38:52 +0800</pubDate><author>wzdushu@gmail.com (wanzi)</author><guid>/post/tools-mdbook-write-books/</guid><description>Introduction to mdBook mdBook is a command-line tool written in Rust and used to create books in Markdown. It is ideal for creating product or API documentation, tutorials, course materials, or any presentation that needs to be concise, easy to navigate, and customizable. The functionality is similar to Gitbook, and the biggest advantage is speed. Lightweight, Markdown syntax Search, integrated search function Syntax highlighting, syntax highlighting Multiple themes, Theme custom</description></item><item><title>Hugo+Github搭建个人博客</title><link>/post/tools-hugo-github-blog/</link><pubDate>Tue, 10 Mar 2020 16:22:42 +0800</pubDate><author>wzdushu@gmail.com (wanzi)</author><guid>/post/tools-hugo-github-blog/</guid><description>Hugo介绍 之前博客一直使用hexo搭建,随着用golang越来越多，一直想把博客也迁移到hugo,hugo就不用多说了go语言编写的静态网</description></item><item><title>Mac系统配置炫酷终端(oh my zsh)</title><link>/post/tools-zsh-cool-install/</link><pubDate>Sat, 10 Nov 2018 10:22:42 +0800</pubDate><author>wzdushu@gmail.com (wanzi)</author><guid>/post/tools-zsh-cool-install/</guid><description>brew工具 官网:https://brew.sh 安装brew Copy 1 /usr/bin/ruby -e &amp;#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&amp;#34; 修改brew源为国内源 Copy 1 2 3 4 5 6 7 git -C &amp;#34;$(brew --repo)&amp;#34; remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git git -C &amp;#34;$(brew --repo homebrew/core)&amp;#34; remote</description></item><item><title>使用OpenSSL签发证书</title><link>/post/linux-openssl-issue-private-certificate/</link><pubDate>Fri, 25 May 2018 13:22:42 +0800</pubDate><author>wzdushu@gmail.com (wanzi)</author><guid>/post/linux-openssl-issue-private-certificate/</guid><description>生成客户端私钥: Copy 1 openssl genrsa -out server.key 2048 生成客户端证书： Copy 1 openssl req -new -sha256 -x509 -days 3650 -key server.key -out server.crt 证书申请文件： Copy 1 openssl req -new -key server.key -out server.csr 生成CA私钥 采用des3加密，需要输</description></item></channel></rss>