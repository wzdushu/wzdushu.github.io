<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>golang on 丸子有记</title><link>/tags/golang/</link><description>Recent content in golang on 丸子有记</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>wzdushu@gmail.com (wanzi)</managingEditor><webMaster>wzdushu@gmail.com (wanzi)</webMaster><copyright>丸子有记</copyright><lastBuildDate>Mon, 22 May 2023 18:22:42 +0800</lastBuildDate><atom:link href="/tags/golang/index.xml" rel="self" type="application/rss+xml"/><item><title>Golang pointer detailed explanation</title><link>/post/golang-note-pointer/</link><pubDate>Mon, 22 May 2023 18:22:42 +0800</pubDate><author>wzdushu@gmail.com (wanzi)</author><guid>/post/golang-note-pointer/</guid><description>What is a pointer? In Go, a pointer is a variable that stores the memory address of another variable. Therefore, a pointer variable points to the memory address of another variable, not the variable itself. When declaring a pointer variable, you need to add * before the variable name to indicate that it is a pointer variable, for example: Copy 1 var p *int This means that a pointer named</description></item><item><title>Golang basic programming</title><link>/post/golang-note-datatype-struct/</link><pubDate>Fri, 17 Mar 2023 18:22:42 +0800</pubDate><author>wzdushu@gmail.com (wanzi)</author><guid>/post/golang-note-datatype-struct/</guid><description>1. Basic knowledge 1. Basic data types Value type: Copy 1 2 3 4 5 6 7 8 9 10 11 12 bool (length 1Byte or 1 byte) byte (1 byte, uint8 alias) rune (4 bytes, int32 alias, -231~231) int (32 or 64, length 4 or 8 bytes) int8 (length 1 byte), int16 (length 2 bytes), int32 (length 4 bytes), int64 (length 8 bytes) uint (32 or 64, length 4</description></item></channel></rss>