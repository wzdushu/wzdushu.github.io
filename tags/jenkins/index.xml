<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>jenkins on 丸子有记</title><link>/tags/jenkins/</link><description>Recent content in jenkins on 丸子有记</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>wzdushu@gmail.com (wanzi)</managingEditor><webMaster>wzdushu@gmail.com (wanzi)</webMaster><copyright>丸子有记</copyright><lastBuildDate>Wed, 22 Mar 2023 18:22:42 +0800</lastBuildDate><atom:link href="/tags/jenkins/index.xml" rel="self" type="application/rss+xml"/><item><title>Jenkins Agent integrates docker and kubectl tools</title><link>/post/cicd-jenkins-agent-docker-kubectl-helm/</link><pubDate>Wed, 22 Mar 2023 18:22:42 +0800</pubDate><author>wzdushu@gmail.com (wanzi)</author><guid>/post/cicd-jenkins-agent-docker-kubectl-helm/</guid><description>When we build Jenkins, the official jenkins-agent does not have the tools we use, such as helm, kubectl, curl, argocd, etc., so we need to integrate them. Note that the official image names have changed: jenkins/agent image, originally named jenkins/slave, renamed to jenkins/agent from 4.3-2 jenkins/inbound-agent image: originally named jenkins/jnlp-slave, renamed to jenkins/inbound-agent from 4.3-2 Dockerfile Copy 1 2 3 4 5 6 7 8 9 10 FROM jenkins/inbound-agent:4.11-1-alpine-jdk11 USER</description></item><item><title>Jenkins Workspace and Maven cache local persistent storage</title><link>/post/cicd-jenkins-localstorage-workspace-maven/</link><pubDate>Wed, 22 Mar 2023 16:22:42 +0800</pubDate><author>wzdushu@gmail.com (wanzi)</author><guid>/post/cicd-jenkins-localstorage-workspace-maven/</guid><description>Create local storage Since this is a test cluster, we can directly use local volume storage here; Since the user running in the jenkins server here is jenkins, and the uid of jenkins is 1000, we need to grant /opt/jenkins_agent/ and /opt/jenkins_maven/ permissions to jenkins in advance on node1 Copy 1 2 chown 1000.1000 -R /opt/jenkins_agent -R chown 1000.1000 -R /opt/jenkins_maven/ -R Local storage: agent-pv-pvc.yaml Copy 1 2 3 4</description></item><item><title>Deploy Jenkins in kubernetes environment</title><link>/post/cicd-jenkins-in-kubernetes/</link><pubDate>Thu, 16 Mar 2023 16:22:42 +0800</pubDate><author>wzdushu@gmail.com (wanzi)</author><guid>/post/cicd-jenkins-in-kubernetes/</guid><description>1. Install and deploy Jenkins 1. Manual installation Manual installation is very simple. Just prepare the yaml configuration in advance. The content of all CICD resources jenkins-install.yaml is as follows: Copy 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 apiVersion: v1 kind: PersistentVolume metadata: name: jenkins-pv spec: storageClassName: local</description></item><item><title>Building Jenkins based on Docker-compose</title><link>/post/cicd-jenkins-install/</link><pubDate>Mon, 11 Nov 2019 16:22:42 +0800</pubDate><author>wzdushu@gmail.com (wanzi)</author><guid>/post/cicd-jenkins-install/</guid><description>docker-compose configuration Copy 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 version: &amp;#39;2&amp;#39; services: jenkins: image: jenkins/jenkins:latest restart: always environment: JAVA_OPTS: &amp;#34;-Dorg.apache.commons.jelly.tags.fmt.timeZone=Asia/Shanghai -Djava.awt.headless=true -Dmail.smtp.starttls.enable=true&amp;#34; ports: - &amp;#34;80:8080&amp;#34; - &amp;#34;50000:50000&amp;#34; volumes: - &amp;#39;/ssd/jenkins:/var/jenkins_home&amp;#39; - &amp;#39;/var/run/docker.sock:/var/run/docker.sock&amp;#39; - &amp;#39;/etc/localtime:/etc/localtime:ro&amp;#39; dns: 223.5.5.5 networks: - extnetwork networks: extnetwork: ipam: config: - subnet: 172.255.0.0/16 Start the service Copy 1 docker-compose up</description></item></channel></rss>